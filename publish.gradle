// ./gradlew clean build generateRelease
apply from: 'publish_settings.gradle'

def artifactId = project.PUBLISH_ARTIFACT_ID

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId = project.PUBLISH_ARTIFACT_ID
            from components.java
            versionMapping {
                usage('java-api') {
                    fromResolutionOf('runtimeClasspath')
                }
                usage('java-runtime') {
                    fromResolutionResult()
                }
            }
            pom {
                name = project.POM_PROJECT_NAME
                description = project.POM_DESCRIPTION
                url = project.POM_URL

                licenses {
                    license {
                        name = project.POM_LICENCE_NAME
                        url = project.POM_LICENCE_URL
                    }
                }
                developers {
                    developer {
                        id = project.POM_DEVELOPER_ID
                        name = project.POM_DEVELOPER_NAME
                        email = project.POM_DEVELOPER_MAIL
                    }
                }
                scm {
                    connection = project.POM_SCM_CONNECTION
                    developerConnection = project.POM_SCM_DEV_CONNECTION
                    url = project.POM_SCM_URL
                }
            }
        }
    }
    repositories {
        maven {
            credentials {
                username project.hasProperty('ossrhUsername') ? project.property('ossrhUsername') : ''
                password project.hasProperty('ossrhPassword') ? project.property('ossrhPassword') : ''
            }

            def releasesRepoUrl = "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/"
            def snapshotsRepoUrl = "https://s01.oss.sonatype.org/content/repositories/snapshots/"
            url = project.hasProperty('release') ? releasesRepoUrl : snapshotsRepoUrl
        }
    }
}

signing {
    sign publishing.publications.mavenJava
}

javadoc {
    if (JavaVersion.current().isJava9Compatible()) {
        options.addBooleanOption('html5', true)
    }
}